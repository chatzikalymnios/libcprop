PREFIX = /usr/local
CC = clang
AR = ar
CFLAGS = -fpic -g -o0 -Wall -Werror

# Compiler flags for automatic dependency generation
DEPFLAGS = -MT $@ -MMD

# Source file extension
SRCEXT = c

LIBNAME = cprop
SONAME = lib$(LIBNAME).so
ANAME = lib$(LIBNAME).a

# Lib directories
SRCDIR = src
INCDIR = include
LIBDIR = lib
BUILDDIR = build

# Lib sources/objects/dependencies
SOURCES = $(shell find $(SRCDIR) -type f -name "*.$(SRCEXT)")
OBJECTS = $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.o))
DEPS = $(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.d))

# Lib lib/inc flags
LIB = 
INC = -I $(INCDIR)

# Example directories
EXAMPLEDIR = example
EXAMPLESRCDIR = $(EXAMPLEDIR)/src
EXAMPLEBUILDDIR = $(EXAMPLEDIR)/build
EXAMPLETARGET = $(EXAMPLEDIR)/run

# Example sources/objects/dependencies
EXAMPLESOURCES = $(shell find $(EXAMPLESRCDIR) -type f -name "*.$(SRCEXT)")
EXAMPLEOBJECTS = $(patsubst $(EXAMPLESRCDIR)/%,$(EXAMPLEBUILDDIR)/%,$(EXAMPLESOURCES:.$(SRCEXT)=.o))
EXAMPLEDEPS = $(patsubst $(EXAMPLESRCDIR)/%,$(EXAMPLEBUILDDIR)/%,$(EXAMPLESOURCES:.$(SRCEXT)=.d))

# Example lib/inc flags
EXAMPLELIB = -l$(LIBNAME)
EXAMPLELIB += $(LIB)
EXAMPLEINC = $(INC)
EXAMPLELDIR = -L $(LIBDIR)

# Test directories
TESTDIR = tests
TESTSRCDIR = $(TESTDIR)/src
TESTBUILDDIR = $(TESTDIR)/build
TESTTARGET = $(TESTDIR)/run

# Test sources/objects/dependencies
TESTSOURCES = $(shell find $(TESTSRCDIR) -type f -name "*.$(SRCEXT)")
TESTOBJECTS = $(patsubst $(TESTSRCDIR)/%,$(TESTBUILDDIR)/%,$(TESTSOURCES:.$(SRCEXT)=.o))
TESTDEPS = $(patsubst $(TESTSRCDIR)/%,$(TESTBUILDDIR)/%,$(TESTSOURCES:.$(SRCEXT)=.d))

# Test lib/inc flags
TESTLIB = -lcheck -l$(LIBNAME)
TESTLIB += $(LIB)
TESTINC = $(INC)
TESTINC += -I $(SRCDIR)
TESTLDIR = -L $(LIBDIR)

# Lib targets

all: $(LIBDIR)/$(SONAME) $(LIBDIR)/$(ANAME)

$(LIBDIR)/$(SONAME): $(OBJECTS)
	@mkdir -p $(@D)
	$(CC) -shared $< -o $@ $(LIB)

$(LIBDIR)/$(ANAME): $(OBJECTS)
	@mkdir -p $(@D)
	$(AR) rcs $@ $< $(LIB)

$(BUILDDIR)/%.o: $(SRCDIR)/%.$(SRCEXT)
	@mkdir -p $(@D)
	$(CC) $(DEPFLAGS) -fpic $(CFLAGS) $(INC) -c -o $@ $<

# Example Targets

.PHONY: example

example: $(LIBDIR)/$(ANAME) $(EXAMPLEOBJECTS)
	$(CC) -static $(EXAMPLELDIR) $(EXAMPLEOBJECTS) -o $(EXAMPLETARGET) $(EXAMPLELIB)
	$(EXAMPLETARGET)

$(EXAMPLEBUILDDIR)/%.o: $(EXAMPLESRCDIR)/%.$(SRCEXT)
	@mkdir -p $(@D)
	$(CC) $(DEPFLAGS) $(CFLAGS) $(EXAMPLEINC) -c -o $@ $<

# Test Targets

.PHONY: test

test: $(LIBDIR)/$(ANAME) $(TESTOBJECTS)
	$(CC) -lcheck $(TESTLDIR) $(TESTOBJECTS) -o $(TESTTARGET) $(LIBDIR)/$(ANAME)
	@$(TESTTARGET)

$(TESTBUILDDIR)/%.o: $(TESTSRCDIR)/%.$(SRCEXT)
	@mkdir -p $(@D)
	$(CC) $(DEPFLAGS) $(CFLAGS) $(TESTINC) -c -o $@ $<

# Misc Targets

.PHONY: clean

clean:
	rm -rf $(BUILDDIR) $(LIBDIR)
	rm -rf $(EXAMPLEBUILDDIR) $(EXAMPLETARGET)
	rm -rf $(TESTBUILDDIR) $(TESTTARGET)
	
.PHONY: install

install: $(LIBDIR)/$(SONAME)
	@mkdir -p $(DESTDIR)$(PREFIX)/lib
	@mkdir -p $(DESTDIR)$(PREFIX)/include
	cp $(LIBDIR)/$(SONAME) $(DESTDIR)$(PREFIX)/lib/$(SONAME)
	cp $(INCDIR)/$(LIBNAME).h $(DESTDIR)$(PREFIX)/include/$(LIBNAME).h
	
.PHONY: uninstall

uninstall:
	rm -f $(DESTDIR)$(PREFIX)/lib/$(SONAME)
	rm -f $(DESTDIR)$(PREFIX)/include/$(LIBNAME).h

# Autogenerated Targets

-include $(DEPS)
